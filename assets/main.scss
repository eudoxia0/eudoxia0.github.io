---
---

@charset "utf-8";

//
// Local Fonts
//

@font-face {
    font-family: "NimbusRoman";
    font-weight: normal;
    font-style: normal;
    src: url("/assets/fonts/nimbus-roman/NimbusRoman-Regular.otf") format("opentype");
}

@font-face {
    font-family: "NimbusRoman";
    font-weight: normal;
    font-style: italic;
    src: url("/assets/fonts/nimbus-roman/NimbusRoman-Italic.otf") format("opentype");
}

@font-face {
    font-family: "NimbusRoman";
    font-weight: bold;
    font-style: normal;
    src: url("/assets/fonts/nimbus-roman/NimbusRoman-Bold.otf") format("opentype");
}

@font-face {
    font-family: "NimbusRoman";
    font-weight: bold;
    font-style: italic;
    src: url("/assets/fonts/nimbus-roman/NimbusRoman-BoldItalic.otf") format("opentype");
}

//
// Reset
//

*, *::before, *::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    padding: 0;
    font-weight: normal;
}

h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
}

ul, ol {
    list-style: none;
}

img {
    display: block;
}

a {
    color: black;
    text-decoration: none;
}

//
// Parameters to the design system.
//

// `f` is the base font size: 16px.
$f: 16px;
// `s` is the font scale; 1.250 (major third).
$s: 1.250;
// `b` is the rhythm baseline: 12px.
$b: 12px;

$link-color: #B1002E;

//
// Derived Constants
//

// Font sizes.
$fs: $f * (1 / $s);
$f1: $f;
$f2: $f * $s;
$f3: $f * $s * $s * $s;
$f4: $f * $s * $s * $s * $s;
$f5: $f * $s * $s * $s * $s * $s;

// Sizes.
$b1: $b;
$b2: $b * 2;
$b3: $b * 3;
$b4: $b * 4;
$b5: $b * 5;

//
// Root Styles
//

html {
    max-width: 100%;
    max-height: 100%;
}

//
// Typography
//

body {
    font-family: 'Times', 'Times New Roman', 'NimbusRoman', serif;
    font-weight: normal;
    font-size: $f1;
    line-height: $b * 2;
}

//
// Common Layout
//

.layout-common {
    min-height: 100vh;
    display: flex;
    flex-direction: column;

    .post-list, article {
        max-width: 900px;
        margin-right: auto;
        margin-left: auto;
    }

    > nav.top-nav {
        padding: $b1;

        // We can't know the height of this element ahead of time (because in
        // small screens, the title might spill over multiple lines). Therefore
        // we can't use `box-sizing: border-box;`. Therefore, if we add a
        // border, all subsequent elements will be vertically misaligned by
        // 1px. So we simulate a border using an inset box shadow.
        box-shadow: 0 -1px 0 #000 inset;

        ul {
            li {
                display: inline-block;

                a {
                    color: black;
                    text-decoration: none;
                }

                a, .sep {
                    margin-right: $b1;
                }
            }
        }
    }

    > main {
        flex: 1;
    }

    > footer {
        padding: $b1;
        border-top: 1px solid black;

        a {
            color: $link-color;
        }
    }
}

//
// Home Page Layout
//

.home-page {
    padding: $b4;

    h1 {
        font-size: $f4;
        line-height: $b4;
        margin-bottom: $b4;
    }
}

//
// Media List Component
//

nav.media-nav {
    $initial: $b * 8;
    $final: $initial * 2;

    > ul {
        > li {
            margin-bottom: $b2;

            > a {
                display: flex;
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;

                > .frame {
                    position: relative;

                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;

                    max-width: $initial;
                    max-height: $initial;

                    > .shadow {
                        position: relative;
                        overflow: hidden;

                        display: flex;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                        flex-shrink: 0;

                        width: $initial;
                        height: $initial;

                        > img {
                            max-width: $final;
                            max-height: $final;
                        }
                    }
                }

                > span {
                    display: block;
                    font-size: $f3;
                    line-height: $b4;
                    margin-left: $b2;
                }

                &:hover {
                    > .frame > .shadow {
                        z-index: 1;
                        transition: width 0.3s ease-out, height 0.3s ease-out;

                        max-width: $final;
                        max-height: $final;
                        width: $final;
                        height: $final;
                    }
                }
            }
        }
    }

    // Because this compoene might be embedded inside an article, we have to reset some things.
    ul {
        margin-left: 0;

        li {
            list-style-type: none;

            a {
                color: black;
            }
        }
    }
}

//
// Post List Component
//

.post-list {
    padding: $b2;

    > p {
        margin-bottom: $b2;

        a {
            color: $link-color;
        }
    }

    > h2 {
        font-size: $f2;
        line-height: $b3;
        margin-bottom: $b1;
        border-bottom: 1px solid #c6c6c6;
        font-weight: bold;
    }

    > ul.posts {

        > li {
            margin-bottom: $b2;

            > a {
                display: block;
                font-size: $f2;
                line-height: $b2;

                color: black;
                transition: color 0.3s linear;
                border-bottom: 1px solid transparent;

                &:hover {
                    color: $link-color;
                    transition: color 0.3s linear;
                    border-color: #bbb;
                }
            }

            > .info {
                font-size: $fs;
                line-height: $b2;

                > .date {
                    color: #474747;
                }

                > .summary {

                }
            }
        }
    }
}

//
// Article Text Style
//

.layout-article, .layout-fiction {
    header {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        // We can't know the height of this element ahead of time (because in
        // small screens, the title might spill over multiple lines). Therefore
        // we can't use `box-sizing: border-box;`. Therefore, if we add a
        // border, all subsequent elements will be vertically misaligned by
        // 1px. So we simulate a border using an inset box shadow.
        box-shadow: 0 -1px 0 #000 inset;

        h1 {
            font-size: $f4;
            line-height: $b4;
            margin: $b2 $b1;
            text-align: center;
        }
    }
}

article {
    padding: $b2;

    h1 {
        font-size: $f3;
        line-height: $b4;
        margin-bottom: $b2;
        border-bottom: 1px solid #8a8a8a;
        font-weight: normal;
    }

    h2 {
        font-size: $f2;
        line-height: $b3;
        margin-bottom: $b1;
        border-bottom: 1px solid #c6c6c6;
        font-weight: bold;
    }

    h3 {
        font-size: $f1;
        line-height: $b*3;
        font-weight: bold;
    }

    sup[role=doc-noteref] {
        font-size: $f1;
        vertical-align: 0;

        &:before {
            content: "[";
        }

        &:after {
            content: "]";
        }
    }

    p, blockquote, table, ul, ol, dl, h1, h2, h3, hr {
        margin-bottom: $b1;
    }

    .highlighter-rouge, pre {
        margin-bottom: $b1;
    }

    p {
        text-align: justify;
    }

    img {
        max-width: 100%;
        padding: $b1;
    }

    blockquote {
        margin: $b2;
        font-style: italic;
    }

    :not(pre) > code {
        font-family: 'Inconsolata';
        font-size: $f1;
        line-height: $b2;
    }

    pre {
        border: 1px solid #f2f2f2;
        background: #fcfcfc;
        overflow-x: scroll;
        padding: $b1;

        line-height: 15px;

        > code {
            font-size: 12px;
            line-height: 15px;
        }
    }

    ul {
        list-style-type: disc;
    }

    ol {
        list-style-type: decimal;
    }

    ul, ol, dl {
        margin-left: $b2;
    }

    dl {
        dt {
            font-weight: bold;
        }

        dd {
            margin-left: $b2;
        }
    }

    hr {
        border: none;
        text-align: center;

        &:after {
            content: '‚ùß';
            color: black;
        }
    }

    .cite {
        text-align: right;
        font-style: normal;
    }

    table {
        width: 100%;
        border-collapse: collapse;

        td, th {
            border: 1px solid black;
            padding: 2px 4px;
        }

        th {
            font-weight: bold;
        }
    }

    a {
        color: $link-color;
        text-decoration: none;
    }

    b, strong {
        font-weight: bold;
    }
}

//
// Syntax Highlighting
//

// Essentially this https://github.com/richleland/pygments-css/blob/master/trac.css
// but different


.highlight .c { color: #999988; font-style: italic } /* Comment */
.highlight .k { font-weight: bold } /* Keyword */
.highlight .o { font-weight: bold } /* Operator */
.highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */
.highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */
.highlight .cp { color: #999999; font-weight: bold } /* Comment.Preproc */
.highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */
.highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */
.highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */
.highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */
.highlight .ge { font-style: italic } /* Generic.Emph */
.highlight .gr { color: #aa0000 } /* Generic.Error */
.highlight .gh { color: #999999 } /* Generic.Heading */
.highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */
.highlight .go { color: #888888 } /* Generic.Output */
.highlight .gp { color: #555555 } /* Generic.Prompt */
.highlight .gs { font-weight: bold } /* Generic.Strong */
.highlight .gu { color: #aaaaaa } /* Generic.Subheading */
.highlight .gt { color: #aa0000 } /* Generic.Traceback */
.highlight .kc { font-weight: bold } /* Keyword.Constant */
.highlight .kd { font-weight: bold } /* Keyword.Declaration */
.highlight .kn { font-weight: bold } /* Keyword.Namespace */
.highlight .kp { font-weight: bold } /* Keyword.Pseudo */
.highlight .kr { font-weight: bold } /* Keyword.Reserved */
.highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */
.highlight .m { color: #009999 } /* Literal.Number */
.highlight .s { color: #bb8844 } /* Literal.String */
.highlight .na { color: #008080 } /* Name.Attribute */
.highlight .nb { color: #999999 } /* Name.Builtin */
.highlight .nc { color: #445588; font-weight: bold } /* Name.Class */
.highlight .no { color: #008080 } /* Name.Constant */
.highlight .ni { color: #800080 } /* Name.Entity */
.highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */
.highlight .nf { color: #990000; font-weight: bold } /* Name.Function */
.highlight .nn { color: #555555 } /* Name.Namespace */
.highlight .nt { color: #000080 } /* Name.Tag */
.highlight .nv { color: #008080 } /* Name.Variable */
.highlight .ow { font-weight: bold } /* Operator.Word */
.highlight .w { color: #bbbbbb } /* Text.Whitespace */
.highlight .mb { color: #009999 } /* Literal.Number.Bin */
.highlight .mf { color: #009999 } /* Literal.Number.Float */
.highlight .mh { color: #009999 } /* Literal.Number.Hex */
.highlight .mi { color: #009999 } /* Literal.Number.Integer */
.highlight .mo { color: #009999 } /* Literal.Number.Oct */
.highlight .sa { color: #bb8844 } /* Literal.String.Affix */
.highlight .sb { color: #bb8844 } /* Literal.String.Backtick */
.highlight .sc { color: #bb8844 } /* Literal.String.Char */
.highlight .dl { color: #bb8844 } /* Literal.String.Delimiter */
.highlight .sd { color: #bb8844 } /* Literal.String.Doc */
.highlight .s2 { color: #bb8844 } /* Literal.String.Double */
.highlight .se { color: #bb8844 } /* Literal.String.Escape */
.highlight .sh { color: #bb8844 } /* Literal.String.Heredoc */
.highlight .si { color: #bb8844 } /* Literal.String.Interpol */
.highlight .sx { color: #bb8844 } /* Literal.String.Other */
.highlight .sr { color: #808000 } /* Literal.String.Regex */
.highlight .s1 { color: #bb8844 } /* Literal.String.Single */
.highlight .ss { color: #bb8844 } /* Literal.String.Symbol */
.highlight .bp { color: #999999 } /* Name.Builtin.Pseudo */
.highlight .fm { color: #990000; font-weight: bold } /* Name.Function.Magic */
.highlight .vc { color: #008080 } /* Name.Variable.Class */
.highlight .vg { color: #008080 } /* Name.Variable.Global */
.highlight .vi { color: #008080 } /* Name.Variable.Instance */
.highlight .vm { color: #008080 } /* Name.Variable.Magic */
.highlight .il { color: #009999 } /* Literal.Number.Integer.Long */

//
// EOG581
//

.chapter-start {
    margin: $b2 0;

    p {
        text-align: center;
    }
}

nav.chapter-nav {
    margin-top: $b2;

    ul {
        margin: 0;
        list-style-type: none;

        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }

    li {
        font-style: italic;
        margin: 0 20px;
    }
}

.epigraph {
    padding: $b2;
}

.nameplate p {
    text-align: center;
    font-variant: small-caps;
}

.center p {
    text-align: center;
}

//
// Portfolio
//

.two-columns {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;

    .column {
        width: 50%;
    }
}

//
// Gallery component
//

.prompt p {
    text-align: center;
    font-size: 1.2em;
    margin: 1.2em 0;
}

.gallery {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;


    > .gallery-entry {
        flex-basis: 33%;

        @media (min-width: 501px) and (max-width: 768px) {
            flex-basis: 50%;
        }

        @media (max-width: 500px) {
            flex-basis: 100%;
        }
    }
}

// Uncomment the following to draw a grid on the page:
//body { background-image: linear-gradient(#eee 1px, transparent 1px); background-size: 100% 12px; }
